#IncludeRegexLine: ^[ 	]*[#%][ 	]*(include|import)[ 	]*[<"]([^">]+)([">])

#IncludeRegexScan: ^.*$

#IncludeRegexComplain: ^$

#IncludeRegexTransform: 

../PublicHeaders.h
string
-
unordered_map
-
unordered_set
-
map
-
vector
-
stack
-
deque
-
queue
-
algorithm
-
iostream
-
set
-
Utils/OutputUtils.h
-
iterator
-

../Solutions/BaseSolution.h

../Utils/OutputUtils.h
PublicHeaders.h
../Utils/PublicHeaders.h

/home/sines/Code/LeetCodeSolutions/Cpp/Solutions/BaseSolution.h

/home/sines/Code/LeetCodeSolutions/Cpp/Solutions/DP/L120_Triangle.cpp
PublicHeaders.h
/home/sines/Code/LeetCodeSolutions/Cpp/Solutions/DP/PublicHeaders.h
Solutions/BaseSolution.h
-

/home/sines/Code/LeetCodeSolutions/Cpp/Solutions/DP/L140_WordBreakII.cpp
PublicHeaders.h
/home/sines/Code/LeetCodeSolutions/Cpp/Solutions/DP/PublicHeaders.h
../BaseSolution.h
/home/sines/Code/LeetCodeSolutions/Cpp/Solutions/BaseSolution.h

/home/sines/Code/LeetCodeSolutions/Cpp/Solutions/DP/L174_DungeonGame.cpp
PublicHeaders.h
/home/sines/Code/LeetCodeSolutions/Cpp/Solutions/DP/PublicHeaders.h
Solutions/BaseSolution.h
-

/home/sines/Code/LeetCodeSolutions/Cpp/Solutions/DP/L53_Maximum_Subarray.cpp
PublicHeaders.h
/home/sines/Code/LeetCodeSolutions/Cpp/Solutions/DP/PublicHeaders.h
Solutions/BaseSolution.h
-

/home/sines/Code/LeetCodeSolutions/Cpp/Solutions/DP/L931_MinimumFallingPathSum.cpp
PublicHeaders.h
/home/sines/Code/LeetCodeSolutions/Cpp/Solutions/DP/PublicHeaders.h
Solutions/BaseSolution.h
-

